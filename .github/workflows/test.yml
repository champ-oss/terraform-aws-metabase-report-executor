name: test

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main
  schedule:
    - cron: "0 7 * * 2"

concurrency: test

env:
  TF_INPUT: false
  TF_IN_AUTOMATION: true
  TF_STATE_BUCKET: "env-tfbackend-oss-backend"
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  MONGODB_ATLAS_PRIVATE_KEY: ${{ secrets.MONGODB_ATLAS_PRIVATE_KEY }}
  MONGODB_ATLAS_PUBLIC_KEY: ${{ secrets.MONGODB_ATLAS_PUBLIC_KEY }}
  MONGODB_ATLAS_ORG: ${{ secrets.MONGODB_ATLAS_ORG }}
  NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}
  NEW_RELIC_REGION: ${{ secrets.NEW_RELIC_REGION }}
  NEW_RELIC_ACCOUNT_ID: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}

defaults:
  run:
    shell: bash
    working-directory: terraform/examples/complete

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: 'maven'
      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: "${{ github.workspace }}/repository"
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: hashicorp/setup-terraform@v2.0.3 # https://github.com/hashicorp/setup-terraform/releases
        with:
          terraform_version: 1.3.5 # https://github.com/hashicorp/terraform/releases
          terraform_wrapper: false
      - name: TF_VAR_git
        run: echo "TF_VAR_git=$(echo ${GITHUB_REPOSITORY} | sed -e 's|.*/||')" >> $GITHUB_ENV
      - name: init
        run: terraform init -backend-config key=${TF_VAR_git} -backend-config bucket=${TF_STATE_BUCKET}
      - name: validate
        run: terraform validate
      - name: plan
        run: terraform plan -out=tfplan
      - name: apply
        run: terraform apply -auto-approve tfplan
      - name: check
        run: terraform plan -detailed-exitcode
      - name: output
        run: terraform output
      - name: integration test
        run: |
          for row in $(echo $(terraform output -json) | jq -c '. | to_entries[]'); do
            key=$(echo $row | jq -r '.key' | tr '[:lower:]' '[:upper:]')
            value=$(echo $row | jq -r '.value.value' | tr -d '\n[]" ')
            export $key=$value
          done
          cd ../../../ && bash test.sh
      - name: destroy
        if: always()
        run: terraform destroy -auto-approve
